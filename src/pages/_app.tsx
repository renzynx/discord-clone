import '@/styles/globals.css';
import type { AppProps } from 'next/app';
import Head from 'next/head';
import ggsans from '@/lib/fonts/ggsans';
import { ReactNode } from 'react';
import {
	createBrowserSupabaseClient,
	Session,
} from '@supabase/auth-helpers-nextjs';
import { SessionContextProvider } from '@supabase/auth-helpers-react';
import { useState } from 'react';
import RootLayout from '@/layouts/RootLayout';
import { Database } from '@/generated/supabase';

type CustomApp = AppProps<{ initialSession: Session }> & {
	Component: { layout: boolean };
};

const className = `${ggsans.variable} font-sans bg-discord-chat text-discord-white`;

export default function App({ Component, pageProps }: CustomApp) {
	const [supabase] = useState(() => createBrowserSupabaseClient<Database>());
	const layout = (Component.layout ??= true);
	let item: ReactNode;

	if (layout) {
		item = (
			<RootLayout>
				<Component {...pageProps} />
			</RootLayout>
		);
	} else {
		item = <Component {...pageProps} />;
	}

	return (
		<>
			<Head>
				<title>Discord</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<SessionContextProvider
				supabaseClient={supabase}
				initialSession={pageProps.initialSession}
			>
				<main className={className}>{item}</main>
			</SessionContextProvider>
		</>
	);
}
